{
  "openapi": "3.0.3",
  "info": {
    "description": "This is openapi documentation for course Advanced studies of software development - Building cloud integration",
    "version": "1.0.0",
    "title": "Advanced studies of software development",
    "contact": {
      "name": "Henry Väisänen",
      "email": "t5vahe01@students.oamk.fi"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers": [
    {
      "url": "http://api.avaruus.ninja"
    }
  ],
  "tags": [
    {
      "name": "item",
      "description": "Endpoints for item management"
    },
    {
      "name": "search",
      "description": "Endpoints for searching items"
    },
    {
      "name": "user",
      "description": "Endpoints for user operations"
    }
  ],
  "paths": {
    "/item": {
      "post": {
        "tags": [
          "item"
        ],
        "summary": "Add a new item",
        "description": "Adds new item to be sold",
        "operationId": "addItem",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item added succesfully"
          },
          "400": {
            "description": "Invalid input or required field's are missing"
          },
          "401": {
            "description": "Token is invalid on missing"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "item"
        ],
        "summary": "Edit an existing item",
        "description": "",
        "operationId": "editItem",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item updated succesfully"
          },
          "400": {
            "description": "Invalid input or required field's are missing"
          },
          "401": {
            "description": "Token is invalid on missing"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "item"
        ],
        "summary": "Delete an existing item",
        "description": "Deletes existing item",
        "operationId": "deleteItem",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item deleted succesfully"
          },
          "400": {
            "description": "Invalid input or required field's are missing"
          },
          "401": {
            "description": "Token is invalid on missing"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/search": {
      "get": {
        "tags": [
          "search"
        ],
        "summary": "List all items",
        "operationId": "listItems",
        "responses": {
          "200": {
            "description": "Query was succesful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResults"
                }
              }
            }
          },
          "400": {
            "description": "Invalid search parameter"
          }
        }
      }
    },
    "/search/date": {
      "get": {
        "tags": [
          "search"
        ],
        "summary": "Find items by date they were added",
        "description": "",
        "operationId": "findItemsByDate",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "Date from",
            "schema": {
              "type": "string",
              "example": "01.01.2000"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Date to",
            "schema": {
              "type": "string",
              "example": "01.01.2001"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Query was succesful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResults"
                }
              }
            }
          },
          "400": {
            "description": "Invalid search parameter"
          }
        }
      }
    },
    "/search/category/{category}": {
      "get": {
        "tags": [
          "search"
        ],
        "summary": "Find items by category",
        "description": "",
        "operationId": "findItemsByCategory",
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "description": "Category where to find items",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Query was succesful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResults"
                }
              }
            }
          },
          "400": {
            "description": "Invalid search parameter"
          }
        }
      }
    },
    "/search/location/{location}": {
      "get": {
        "tags": [
          "search"
        ],
        "summary": "Find items by location",
        "description": "",
        "operationId": "getitemsByLocation",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "description": "Location where to find items",
            "required": true,
            "schema": {
              "type": "string",
              "example": "finland"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Query was succesful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResults"
                }
              }
            }
          },
          "400": {
            "description": "Invalid search parameter"
          }
        }
      }
    },
    "/user": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Register new user",
        "operationId": "createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User created succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "400": {
            "description": "Invalid user info"
          },
          "401": {
            "description": "User already exists"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "AddUser": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "maxLength": 32
          },
          "firstname": {
            "type": "string",
            "maxLength": 32
          },
          "lastname": {
            "type": "string",
            "maxLength": 32
          },
          "password": {
            "type": "string",
            "maxLength": 64
          },
          "phone": {
            "type": "string",
            "maxLength": 16
          }
        },
        "required": [
          "username",
          "firstname",
          "lastname",
          "password",
          "phone"
        ]
      },
      "LoginUser": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "maxLength": 32
          },
          "password": {
            "type": "string",
            "maxLength": 64
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "Token": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "maxLength": 255
          }
        }
      },
      "AddItem": {
        "type": "object",
        "required": [
          "title",
          "description",
          "location",
          "category",
          "deliveryType",
          "price"
        ],
        "properties": {
          "title": {
            "type": "string",
            "example": "Example item"
          },
          "description": {
            "type": "string",
            "example": "Describe the item"
          },
          "category": {
            "type": "string",
            "example": "cars"
          },
          "location": {
            "type": "string",
            "example": "finland"
          },
          "deliveryType": {
            "type": "integer",
            "enum": [
              1,
              2
            ]
          },
          "price": {
            "type": "number",
            "example": "19.90"
          }
        }
      },
      "EditItem": {
        "type": "object",
        "required": [
          "title",
          "description",
          "location",
          "category",
          "deliveryType",
          "price"
        ],
        "properties": {
          "itemId": {
            "type": "integer",
            "example": "2"
          },
          "title": {
            "type": "string",
            "example": "Example item"
          },
          "description": {
            "type": "string",
            "example": "Describe the item"
          },
          "category": {
            "type": "string",
            "example": "cars"
          },
          "location": {
            "type": "string",
            "example": "finland"
          },
          "deliveryType": {
            "type": "integer",
            "enum": [
              1,
              2
            ]
          },
          "price": {
            "type": "number",
            "example": "19.90"
          }
        }
      },
      "DeleteItem": {
        "type": "object",
        "required": [
          "itemId"
        ],
        "properties": {
          "itemId": {
            "type": "integer",
            "example": "2"
          }
        }
      },
      "SearchResults": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SearchResult"
        }
      },
      "SearchResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "userId": {
            "type": "integer"
          },
          "timestamp": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deliveryType": {
            "type": "integer"
          },
          "price": {
            "type": "number"
          },
          "firstname\"": {
            "type": "string"
          },
          "lastname\"": {
            "type": "string"
          },
          "phone\"": {
            "type": "string"
          },
          "username\"": {
            "type": "string"
          }
        }
      }
    }
  }
}